// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class OlympusStakingV1 extends ethereum.SmartContract {
  static bind(address: Address): OlympusStakingV1 {
    return new OlympusStakingV1("OlympusStakingV1", address);
  }

  epochLengthInBlocks(): BigInt {
    let result = super.call(
      "epochLengthInBlocks",
      "epochLengthInBlocks():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_epochLengthInBlocks(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "epochLengthInBlocks",
      "epochLengthInBlocks():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  ohm(): Address {
    let result = super.call("ohm", "ohm():(address)", []);

    return result[0].toAddress();
  }

  try_ohm(): ethereum.CallResult<Address> {
    let result = super.tryCall("ohm", "ohm():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  ohmToDistributeNextEpoch(): BigInt {
    let result = super.call(
      "ohmToDistributeNextEpoch",
      "ohmToDistributeNextEpoch():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_ohmToDistributeNextEpoch(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "ohmToDistributeNextEpoch",
      "ohmToDistributeNextEpoch():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  sOHM(): Address {
    let result = super.call("sOHM", "sOHM():(address)", []);

    return result[0].toAddress();
  }

  try_sOHM(): ethereum.CallResult<Address> {
    let result = super.tryCall("sOHM", "sOHM():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  stakeOHM(amountToStake_: BigInt): boolean {
    let result = super.call("stakeOHM", "stakeOHM(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(amountToStake_)
    ]);

    return result[0].toBoolean();
  }

  try_stakeOHM(amountToStake_: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("stakeOHM", "stakeOHM(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(amountToStake_)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  unstakeOHM(amountToWithdraw_: BigInt): boolean {
    let result = super.call("unstakeOHM", "unstakeOHM(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(amountToWithdraw_)
    ]);

    return result[0].toBoolean();
  }

  try_unstakeOHM(amountToWithdraw_: BigInt): ethereum.CallResult<boolean> {
    let result = super.tryCall("unstakeOHM", "unstakeOHM(uint256):(bool)", [
      ethereum.Value.fromUnsignedBigInt(amountToWithdraw_)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get ohmTokenAddress_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get sOHM_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get epochLengthInBlocks_(): i32 {
    return this._call.inputValues[2].value.toI32();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetEpochLengthintBlockCall extends ethereum.Call {
  get inputs(): SetEpochLengthintBlockCall__Inputs {
    return new SetEpochLengthintBlockCall__Inputs(this);
  }

  get outputs(): SetEpochLengthintBlockCall__Outputs {
    return new SetEpochLengthintBlockCall__Outputs(this);
  }
}

export class SetEpochLengthintBlockCall__Inputs {
  _call: SetEpochLengthintBlockCall;

  constructor(call: SetEpochLengthintBlockCall) {
    this._call = call;
  }

  get newEpochLengthInBlocks_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetEpochLengthintBlockCall__Outputs {
  _call: SetEpochLengthintBlockCall;

  constructor(call: SetEpochLengthintBlockCall) {
    this._call = call;
  }
}

export class StakeOHMCall extends ethereum.Call {
  get inputs(): StakeOHMCall__Inputs {
    return new StakeOHMCall__Inputs(this);
  }

  get outputs(): StakeOHMCall__Outputs {
    return new StakeOHMCall__Outputs(this);
  }
}

export class StakeOHMCall__Inputs {
  _call: StakeOHMCall;

  constructor(call: StakeOHMCall) {
    this._call = call;
  }

  get amountToStake_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class StakeOHMCall__Outputs {
  _call: StakeOHMCall;

  constructor(call: StakeOHMCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class StakeOHMWithPermitCall extends ethereum.Call {
  get inputs(): StakeOHMWithPermitCall__Inputs {
    return new StakeOHMWithPermitCall__Inputs(this);
  }

  get outputs(): StakeOHMWithPermitCall__Outputs {
    return new StakeOHMWithPermitCall__Outputs(this);
  }
}

export class StakeOHMWithPermitCall__Inputs {
  _call: StakeOHMWithPermitCall;

  constructor(call: StakeOHMWithPermitCall) {
    this._call = call;
  }

  get amountToStake_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get deadline_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get v_(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r_(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s_(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class StakeOHMWithPermitCall__Outputs {
  _call: StakeOHMWithPermitCall;

  constructor(call: StakeOHMWithPermitCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnstakeOHMCall extends ethereum.Call {
  get inputs(): UnstakeOHMCall__Inputs {
    return new UnstakeOHMCall__Inputs(this);
  }

  get outputs(): UnstakeOHMCall__Outputs {
    return new UnstakeOHMCall__Outputs(this);
  }
}

export class UnstakeOHMCall__Inputs {
  _call: UnstakeOHMCall;

  constructor(call: UnstakeOHMCall) {
    this._call = call;
  }

  get amountToWithdraw_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UnstakeOHMCall__Outputs {
  _call: UnstakeOHMCall;

  constructor(call: UnstakeOHMCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UnstakeOHMWithPermitCall extends ethereum.Call {
  get inputs(): UnstakeOHMWithPermitCall__Inputs {
    return new UnstakeOHMWithPermitCall__Inputs(this);
  }

  get outputs(): UnstakeOHMWithPermitCall__Outputs {
    return new UnstakeOHMWithPermitCall__Outputs(this);
  }
}

export class UnstakeOHMWithPermitCall__Inputs {
  _call: UnstakeOHMWithPermitCall;

  constructor(call: UnstakeOHMWithPermitCall) {
    this._call = call;
  }

  get amountToWithdraw_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get deadline_(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get v_(): i32 {
    return this._call.inputValues[2].value.toI32();
  }

  get r_(): Bytes {
    return this._call.inputValues[3].value.toBytes();
  }

  get s_(): Bytes {
    return this._call.inputValues[4].value.toBytes();
  }
}

export class UnstakeOHMWithPermitCall__Outputs {
  _call: UnstakeOHMWithPermitCall;

  constructor(call: UnstakeOHMWithPermitCall) {
    this._call = call;
  }
}
